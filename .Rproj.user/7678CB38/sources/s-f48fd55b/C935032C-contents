---
title: "PRS_500"
output: html_document
---

```{r, message=FALSE, warning=FALSE, tidy=TRUE}
# Reference 
# https://stats.idre.ucla.edu/r/seminars/rcfa/
# http://www2.hawaii.edu/~georgeha/Handouts/meas/Exercises/_book/irm.html

packages = c("psych","corrplot","lavaan","TAM","CDM","readxl","psycModel","ltm","gtsummary","reshape2","dplyr","lmtest")
lapply(packages, library, character.only = TRUE)
path = '/proj/PI_BICK/Projects/Genetic_Survey/ANALYST_yajing/data/'
prs_data = read_excel(paste0(path,'PRSKnowledgeScalePro_correct.incorrect (v1).xlsx'))
prs_data = prs_data %>% filter(is.na(`Survey Identifier`))
dic = read_excel(paste0(path,'PRSKnowledgeScaleProlificco_DataDictionary_2022-01-31_raw.xlsx'))
colnames(prs_data)[9:18]= as.matrix(dic %>% select(1) %>% filter(row_number() %in% c(7:16)))
prs_data[,9:18] = lapply(prs_data[,9:18],as.numeric)
prs_data$prs_lim_race_inequality[is.na(prs_data$prs_lim_race_inequality)] = 0
prs = prs_data[,9:18][,-c(5,7)]

# prs_74 = read_excel('~/MyProjects/PI_BICK/Genetic_Survey/data/PRS data_clean_correct.incorrect (v5).xlsx')
# 
# PRSSum = rowSums(prs)
# hist(PRSSum,breaks = 20)
# summary(PRSSum)
# qqnorm(PRSSum + rnorm(500,0,0.5))
# 
# prs_all = rbind(cbind(prs_data[,5:8],PRSSum),prs_74[,c(4:7,19)])
# colnames(prs_all)[1] = "Age"
# prs_all$Graduate = "N"
# prs_all$Graduate[501:574] = "Y"
# hist(prs_all$PRSSum)
# hist(prs_74$PRSSum)
# 
# demo_fit = lm(PRSSum~Age+Sex+Race+Ethnicity+Graduate,data = prs_all)
# summary(demo_fit)
```

## UNC-prs inter-item tetrachoric correlation.

```{r, message=FALSE, warning=FALSE}
colMeans(prs,na.rm=TRUE)
corr_matrix = tetrachoric(prs,smooth=FALSE)$rho
corrplot(corr_matrix,type = 'lower',tl.col = 'black',tl.srt = 45,diag = FALSE)
cronbach.alpha(data = prs, na.rm=TRUE)
glb.algebraic(cov(prs))

long = melt(corr_matrix)
long = long %>% filter(value<1)
summary(long)

alphas = alpha(prs)
item_total_cor = alphas$item.stats$r.drop
summary(item_total_cor)
```

## Confirmatory Factor Analysis(CFA) before Item Response Theory(IRT) Anaylsis

```{r, message=FALSE, warning=FALSE}
m1a = paste0('Knowledge  =~ ',paste(colnames(prs),collapse = "+"))
model = lavaan::cfa(m1a, data = prs, std.lv=FALSE)
summary(model, fit.measures=TRUE, standardized=TRUE,modindices = TRUE)
#parameterEstimates(model,standardized = TRUE, ci =TRUE)
cfa_summary(data=prs,model=m1a,digits=3)
```

```{r, message=FALSE, warning=FALSE}
# Difficulty parameter
tamfit1pl <- tam.mml(prs,irtmodel = "1PL", constraint = "cases", verbose=FALSE)
# Difficulty and discrimination parameter
tamfit2pl <- tam.mml.2pl(prs, irtmodel = "2PL", verbose=FALSE)
# Difficulty, discrimination and guessing parameter
tamfit3pl <- tam.mml.3pl(prs, verbose=FALSE)


lavaan::anova(tamfit1pl, tamfit2pl)
anova(tamfit2pl, tamfit3pl)
anova(tamfit1pl, tamfit3pl)

# x-axis: trait
# y-axis: information
# good at assessing those with lower and moderate genetic knowledge
plot(IRT.informationCurves(tamfit2pl))

# select 2PL model
# non-significant result indicates adequate model fit at the item level
summary(tamfit2pl)
itemfit.sx2(tamfit2pl)
# non-significant result indicates adequate model fit at the item level
```


```{r,warning=FALSE}
colnames(prs_data)[5] = c("Age")
prs_data$irt_scores = IRT.factor.scores(tamfit2pl)$EAP
hist(prs_data$irt_scores,breaks = 30)

Uniform_DIF_p = c()
Non_Uniform_DIF_p = c()

for (item in colnames(prs_data[9:18])[-c(5,7)]){
  for (group in c("Age","Sex","Race","Ethnicity")){
    fom1 = as.formula(paste0("`",item,"` ~ irt_scores"))
    model1 = glm(fom1, family="binomial", data = prs_data)
    
    fom2 = as.formula(paste0("`",item,"` ~ irt_scores + ",group))
    model2 = glm(fom2, family="binomial", data = prs_data)
    
    fom3 = as.formula(paste0("`",item,"` ~ irt_scores + ",group, " + ", group,"*irt_scores"))
    model3 = glm(fom3, family="binomial", data = prs_data)
    
    lrt12 = lrtest(model1,model2)
    Uniform_DIF_p = c(Uniform_DIF_p,lrt12$`Pr(>Chisq)`[2])
    if (lrt12$`Pr(>Chisq)`[2]<0.05){
      print(paste0("Uniform DIF, ",item,",",group,",",round(lrt12$`Pr(>Chisq)`[2],3)))
    }
    
    lrt23 = lrtest(model2,model3)
    Non_Uniform_DIF_p = c(Non_Uniform_DIF_p,lrt23$`Pr(>Chisq)`[2])
    if (lrt23$`Pr(>Chisq)`[2]<0.05){
      print(paste0("Non-Uniform DIF, ",item,",",group,",",round(lrt23$`Pr(>Chisq)`[2],3)))
    }
  }
}
```


```{r}
n = length(Uniform_DIF_p)
fdr = 0.05

BH_uniform = data.frame(p=Uniform_DIF_p[order(Uniform_DIF_p)], rank = 1:n)
BH_uniform$BHcv = BH_uniform$rank/n*fdr
BH_uniform

BH_nonuniform = data.frame(p=Non_Uniform_DIF_p[order(Non_Uniform_DIF_p)], rank = 1:n)
BH_nonuniform$BHcv = BH_nonuniform$rank/n*fdr
BH_nonuniform
```

